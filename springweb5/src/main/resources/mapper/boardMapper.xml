<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sesoc.web5.dao.BoardMapper">
<!-- 글 등록 -->
<insert id="writeCustomerBoard" parameterType="Board">
	insert into 
				customerboard
							( boardnum
							, custid
							, title
							, content
							<if test="originalFile != null and savedFile != null">
							, originalFile
							, savedFile
							</if>
							, ip )
				values 		
							( customerboard_seq.nextVal
							, #{custid}
							, #{title}
							, #{content}
							<if test="originalFile != null and savedFile != null">
							, #{originalFile}
							, #{savedFile}
							</if>
							, #{ip} )
</insert>
<!-- 조회수 증가 -->
<update id="updateContentHits" parameterType="int">
	update customerboard set hits = hits + 1
	where boardnum = #{boardnum} 
</update>
<!-- 글 수정 -->
<update id="updateBoardContent" parameterType="Board">
	update customerboard 
	set 
		title = #{title}
		, content = #{content}
		<if test="originalFile != null and savedFile != null">
		, originalFile = #{originalFile}
		, savedFile = #{savedFile}
		</if>
	where boardnum = #{boardnum} and custid = #{custid}
</update>
<!-- 글 삭제 -->
<delete id="deleteBoardContent" parameterType="Board">
	delete customerboard 
	where boardnum = #{boardnum} and custid = #{custid}
</delete>
<!-- 글 목록 보기 -->
<select id="viewBoardList" parameterType="Hashmap" resultType="Board">
	select 
		title
		, boardnum
		, content
		, custid
		, hits
		, to_char(inputdate, 'yyyy-mm-dd') inputdate
		, originalFile
		, savedFile
		, (select name from customer where customerboard.custid = customer.CUSTID ) name
		, (select count(*) from customerboardreply where customerboard.boardnum = customerboardreply.boardnum) replyCount
	from 
		customerboard
	<!--
	 	단일 parameter가 넘어왔을때 직접 호출할 이름을 지칭하지 못하므로 
		넘어오는 하나의 파라메터를 지칭하는 _parameter로 부른다. (자료형 상관x)
	-->
	<if test="searchText != null and searchType == 'title'"> 
	where
		lower(title) like '%'|| lower(#{searchText}) ||'%'
	</if>
	<if test="searchText != null and searchType == 'custid'"> 
	where
		lower(custid) like '%'|| lower(#{searchText}) ||'%'
	</if>
	<if test="searchText != null and searchType == 'content'"> 
	where
		lower(content) like '%'|| lower(#{searchText}) ||'%'
	</if>
	<if test="searchText != null and searchType == 'titleAndID'"> 
	where
		lower(title) like '%'|| lower(#{searchText}) ||'%' 
			OR
		lower(custid) like '%'||lower(#{searchText}) ||'%' 
	</if>
	order by boardnum desc
</select>
<!-- 글 내용 보기 -->
<select id="viewBoardContent" parameterType="int" resultType="Board">
	select 
		title
		, boardnum
		, content
		, custid
		, hits
		, to_char(inputdate, 'yyyy-mm-dd') inputdate
		, originalFile
		, savedFile
		, (select name from customer where customerboard.custid = customer.CUSTID ) name
	from 
		customerboard
	where boardnum = #{boardnum}
</select>

<!-- 전체 글 갯수(검색 대응) -->
<select id="countBoardContent" parameterType="Hashmap" resultType="int">
	select count(*)
	from customerboard
	<if test="searchText != null and searchType == 'title'"> 
	where
		lower(title) like '%'|| lower(#{searchText}) ||'%'
	</if>
	<if test="searchText != null and searchType == 'custid'"> 
	where
		lower(custid) like '%'|| lower(#{searchText}) ||'%'
	</if>
	<if test="searchText != null and searchType == 'content'"> 
	where
		lower(content) like '%'||lower(#{searchText}) ||'%'
	</if>
	<if test="searchText != null and searchType == 'titleAndID'"> 
	where
		lower(title) like '%'|| lower(#{searchText}) ||'%' 
			OR
		lower(custid) like '%'||lower(#{searchText}) ||'%' 
	</if>
</select>
<!-- 첨부파일 삭제를 위한 글 검색 -->
<select id="searchForDeleteFile" parameterType="Board" resultType="Board">
	select * from customerboard
	where
		boardnum = #{boardnum}
		and
		custid = #{custid}
</select>
</mapper>